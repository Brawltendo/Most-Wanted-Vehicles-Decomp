#pragma once

namespace Attrib
{
namespace Gen
{

struct induction : Instance
{
    struct LayoutStruct
    {
		float LOW_BOOST;
		float SPOOL_TIME_DOWN;
		float VACUUM;
		float SPOOL;
		float SPOOL_TIME_UP;
		float PSI;
		float HIGH_BOOST;
    };

	// The minimum amount of boost to apply
	float& LOW_BOOST()
	{
		return ((LayoutStruct*)GetLayoutPointer())->LOW_BOOST;
	}

	// The amount of time taken, in seconds, for the turbocharger to fully spool down
	float& SPOOL_TIME_DOWN()
	{
		return ((LayoutStruct*)GetLayoutPointer())->SPOOL_TIME_DOWN;
	}

	// Negative boost applied before the turbocharger can spool up
	float& VACUUM()
	{
		return ((LayoutStruct*)GetLayoutPointer())->VACUUM;
	}

	// The RPM threshold at which a turbocharger will start to spool up
	// Set to 0 for superchargers
	float& SPOOL()
	{
		return ((LayoutStruct*)GetLayoutPointer())->SPOOL;
	}

	// The amount of time taken, in seconds, for the turbocharger to fully spool up
	float& SPOOL_TIME_UP()
	{
		return ((LayoutStruct*)GetLayoutPointer())->SPOOL_TIME_UP;
	}

	// The maximum boost that can be generated by the forced induction
	// This is only used for the boost gauge and has no effect on gameplay
	float& PSI()
	{
		return ((LayoutStruct*)GetLayoutPointer())->PSI;
	}

	// The maximum amount of boost to apply
	float& HIGH_BOOST()
	{
		return ((LayoutStruct*)GetLayoutPointer())->HIGH_BOOST;
	}

};

} // namespace Gen
} // namespace Attrib